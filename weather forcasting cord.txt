#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<curl.h>
#include<cJSON.h>

#define API_KEY "your-api-key-here"

struct MemoryStruct {
    char *memory;
    size_t size;
};

static size_t WriteMemoryCallback(void *contents, size_t size, size_t nmemb, void *userp) {
    size_t realsize = size * nmemb;
    struct MemoryStruct *mem = (struct MemoryStruct *)userp;

    mem->memory = realloc(mem->memory, mem->size + realsize + 1);
    if (mem->memory == NULL) {
        printf("Error: realloc() failed\n");
        return 0;
    }

    memcpy(&(mem->memory[mem->size]), contents, realsize);
    mem->size += realsize;
    mem->memory[mem->size] = 0;

    return realsize;
}

int main(int argc, char *argv[]) {
    if (argc < 2) {
        printf("Usage: %s city\n", argv[0]);
        return 1;
    }

    CURL *curl_handle;
    CURLcode res;

    char url[256];
    sprintf(url, "https://api.openweathermap.org/data/2.5/weather?q=%s&appid=%s", argv[1], API_KEY);

    struct MemoryStruct chunk;
    chunk.memory = malloc(1);
    chunk.size = 0;

    curl_global_init(CURL_GLOBAL_ALL);
    curl_handle = curl_easy_init();
    curl_easy_setopt(curl_handle, CURLOPT_URL, url);
    curl_easy_setopt(curl_handle, CURLOPT_WRITEFUNCTION, WriteMemoryCallback);
    curl_easy_setopt(curl_handle, CURLOPT_WRITEDATA, (void *)&chunk);
    curl_easy_setopt(curl_handle, CURLOPT_USERAGENT, "libcurl-agent/1.0");
    res = curl_easy_perform(curl_handle);

    if (res != CURLE_OK) {
        printf("Error: curl_easy_perform() failed: %s\n", curl_easy_strerror(res));
    } else {
        cJSON *root = cJSON_Parse(chunk.memory);
        cJSON *main = cJSON_GetObjectItem(root, "main");
        double temp = cJSON_GetObjectItem(main, "temp")->valuedouble;
        cJSON *weather = cJSON_GetObjectItem(root, "weather");
        char *description = cJSON_GetObjectItem(weather, "description")->valuestring;

        printf("Current weather in %s:\n", argv[1]);
        printf("Temperature: %.2lf degrees Celsius\n", temp - 273.15);
        printf("Description: %s\n", description);

        cJSON_Delete(root);
    }
     curl_easy_cleanup(curl_handle);
    curl_global_cleanup();

    free(chunk.memory);

    return 0;
}

